mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "condition", data=.)+coord_cartesian(ylim =c (0, 6))+labs(x="Treatment",y="Dishonesty \U00B1 s.e.")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2", "C"))%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "condition", data=.)+coord_cartesian(ylim =c (0, 0.5))+labs(x="Treatment",y="Dishonesty \U00B1 s.e.")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2", "C"))%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "condition", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Treatment",y="Dishonesty \U00B1 s.e.")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2", "C"))%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "treatment_f", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Treatment",y="Dishonesty \U00B1 s.e.")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2", "C"))%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 5, label.pos = "in",facet.by= "treatment_f", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Treatment",y="Dishonesty \U00B1 s.e.")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2", "C"))%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "treatment_f", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Treatment",y="Dishonesty \U00B1 s.e.")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2", "C"))%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "treatment_f", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Treatment",y="Dishonesty \U00B1 s.e.")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))+hline(y=0.17)
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2", "C"))%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "treatment_f", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Treatment",y="Dishonesty \U00B1 s.e.")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))+geom_hline(y=0.17)
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2", "C"))%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "treatment_f", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Treatment",y="Dishonesty \U00B1 s.e.")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))+geom_hline(yintercept=0.17)
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2", "C"))%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "treatment_f", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Treatment",y="Dishonesty \U00B1 s.e.")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))+geom_hline(yintercept=0.17,, linetype = "longdash")
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2"))%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "treatment_f", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Treatment",y="Dishonesty \U00B1 s.e.")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))+geom_hline(yintercept=0.17,, linetype = "longdash")
dishonest<-mmcur_pretest%>%
unite(throws, throw_1:tenth_roll, sep=",",remove = FALSE)%>%
mutate(throws_2=gsub("^,*|(?<=,),|,*$", "", throws, perl=T))%>%
mutate(last_outcome=as.numeric(str_sub(throws_2, start= -1)))%>%
mutate(reported_number=as.numeric(report_roll))%>%
select(steal,reported_number,throw_1, last_outcome,treatment_f,total_rolls )%>%
filter(steal==1&treatment_f=="Three Rolls"&total_rolls>1)%>%
ggplot() +
geom_histogram(aes(x= last_outcome, y= (..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..],color = "black", fill = "gray48"), stat="count",binwidth=0.5, alpha=0.3,size=1, na.rm = TRUE) +
ylim(0,0.4)+
scale_fill_manual(name = "Last roll",
values = c("gray48")) +
scale_color_manual(name = "Last rolls",
values = c("gray48")) +
geom_hline(yintercept = 0.166,linetype = "longdash")+
ggthemes::theme_clean() +
theme(plot.title = element_text(hjust = 0.5)) +
#geom_density(aes(x= "reported_number", y = ..density..), fill = "black", colour = "black", alpha = 0.3) +
ylab("Fraction")+
xlab("Outcome of the last roll")+
ggtitle("Dishonest")+
rremove("legend")+
rremove("xlab")
honest<-mmcur_pretest%>%
unite(throws, throw_1:tenth_roll, sep=",",remove = FALSE)%>%
mutate(throws_2=gsub("^,*|(?<=,),|,*$", "", throws, perl=T))%>%
mutate(last_outcome=as.numeric(str_sub(throws_2, start= -1)))%>%
mutate(reported_number=as.numeric(report_roll))%>%
select(steal,reported_number,throw_1, last_outcome,treatment_f,total_rolls )%>%
filter(steal==0&treatment_f=="Three Rolls"&total_rolls>1)%>%
ggplot() +
geom_histogram(aes(x= last_outcome, y= (..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..],color = "black", fill = "gray48"), stat="count",binwidth=0.5, alpha=0.3,size=1, na.rm = TRUE) +
geom_hline(yintercept = 0.166, linetype = "longdash")+
ylim(0,0.4)+
scale_fill_manual(name = "Last roll",
values = c("gray48")) +
scale_color_manual(name = "Last rolls",
values = c("gray48")) +
ggthemes::theme_clean() +
theme(plot.title = element_text(hjust = 0.5)) +
ylab("Fraction")+
xlab("Outcome of the last roll")+
ggtitle("Honest")+
rremove("y.axis")+
rremove("ylab") +
rremove("y.text") +
rremove("y.ticks") +
rremove("legend")+
rremove("xlab")
gg_axis <- cowplot::get_plot_component(ggplot() +
labs(x = "Outcome of the last roll"), "xlab-b")
three_rolls<-(dishonest+honest & labs(x = NULL, y = NULL)) / gg_axis + plot_layout(heights = c(40, 1))+ plot_annotation(
title = 'Outcome of the last roll in Three Rolls')
three_rolls
dishonest<-mmcur_pretest%>%
unite(throws, throw_1:tenth_roll, sep=",",remove = FALSE)%>%
mutate(throws_2=gsub("^,*|(?<=,),|,*$", "", throws, perl=T))%>%
mutate(last_outcome=as.numeric(str_sub(throws_2, start= -1)))%>%
mutate(reported_number=as.numeric(report_roll))%>%
select(steal,reported_number,throw_1, last_outcome,treatment_f,total_rolls )%>%
filter(steal==1&treatment_f=="Three Rolls"&total_rolls>1)%>%
ggplot() +
geom_histogram(aes(x= last_outcome, y= (..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..],color = "black", fill = "gray48"), stat="count",binwidth=0.5, alpha=0.3,size=1, na.rm = TRUE) +
ylim(0,0.5)+
scale_fill_manual(name = "Last roll",
values = c("gray48")) +
scale_color_manual(name = "Last rolls",
values = c("gray48")) +
geom_hline(yintercept = 0.166,linetype = "longdash")+
ggthemes::theme_clean() +
theme(plot.title = element_text(hjust = 0.5)) +
#geom_density(aes(x= "reported_number", y = ..density..), fill = "black", colour = "black", alpha = 0.3) +
ylab("Fraction")+
xlab("Outcome of the last roll")+
ggtitle("Dishonest")+
rremove("legend")+
rremove("xlab")
honest<-mmcur_pretest%>%
unite(throws, throw_1:tenth_roll, sep=",",remove = FALSE)%>%
mutate(throws_2=gsub("^,*|(?<=,),|,*$", "", throws, perl=T))%>%
mutate(last_outcome=as.numeric(str_sub(throws_2, start= -1)))%>%
mutate(reported_number=as.numeric(report_roll))%>%
select(steal,reported_number,throw_1, last_outcome,treatment_f,total_rolls )%>%
filter(steal==0&treatment_f=="Three Rolls"&total_rolls>1)%>%
ggplot() +
geom_histogram(aes(x= last_outcome, y= (..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..],color = "black", fill = "gray48"), stat="count",binwidth=0.5, alpha=0.3,size=1, na.rm = TRUE) +
geom_hline(yintercept = 0.166, linetype = "longdash")+
ylim(0,0.5)+
scale_fill_manual(name = "Last roll",
values = c("gray48")) +
scale_color_manual(name = "Last rolls",
values = c("gray48")) +
ggthemes::theme_clean() +
theme(plot.title = element_text(hjust = 0.5)) +
ylab("Fraction")+
xlab("Outcome of the last roll")+
ggtitle("Honest")+
rremove("y.axis")+
rremove("ylab") +
rremove("y.text") +
rremove("y.ticks") +
rremove("legend")+
rremove("xlab")
gg_axis <- cowplot::get_plot_component(ggplot() +
labs(x = "Outcome of the last roll"), "xlab-b")
three_rolls<-(dishonest+honest & labs(x = NULL, y = NULL)) / gg_axis + plot_layout(heights = c(40, 1))+ plot_annotation(
title = 'Outcome of the last roll in Three Rolls')
three_rolls
dishonest<-mmcur_pretest%>%
unite(throws, throw_1:tenth_roll, sep=",",remove = FALSE)%>%
mutate(throws_2=gsub("^,*|(?<=,),|,*$", "", throws, perl=T))%>%
mutate(last_outcome=as.numeric(str_sub(throws_2, start= -1)))%>%
mutate(reported_number=as.numeric(report_roll))%>%
select(steal,reported_number,throw_1, last_outcome,treatment_f,total_rolls )%>%
filter(steal==1&treatment_f=="Three Rolls"&total_rolls>1)%>%
ggplot() +
geom_histogram(aes(x= last_outcome, y= (..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..],color = "black", fill = "gray48"), stat="count",binwidth=0.5, alpha=0.3,size=1, na.rm = TRUE) +
ylim(0,0.8)+
scale_fill_manual(name = "Last roll",
values = c("gray48")) +
scale_color_manual(name = "Last rolls",
values = c("gray48")) +
geom_hline(yintercept = 0.166,linetype = "longdash")+
ggthemes::theme_clean() +
theme(plot.title = element_text(hjust = 0.5)) +
#geom_density(aes(x= "reported_number", y = ..density..), fill = "black", colour = "black", alpha = 0.3) +
ylab("Fraction")+
xlab("Outcome of the last roll")+
ggtitle("Dishonest")+
rremove("legend")+
rremove("xlab")
honest<-mmcur_pretest%>%
unite(throws, throw_1:tenth_roll, sep=",",remove = FALSE)%>%
mutate(throws_2=gsub("^,*|(?<=,),|,*$", "", throws, perl=T))%>%
mutate(last_outcome=as.numeric(str_sub(throws_2, start= -1)))%>%
mutate(reported_number=as.numeric(report_roll))%>%
select(steal,reported_number,throw_1, last_outcome,treatment_f,total_rolls )%>%
filter(steal==0&treatment_f=="Three Rolls"&total_rolls>1)%>%
ggplot() +
geom_histogram(aes(x= last_outcome, y= (..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..],color = "black", fill = "gray48"), stat="count",binwidth=0.5, alpha=0.3,size=1, na.rm = TRUE) +
geom_hline(yintercept = 0.166, linetype = "longdash")+
ylim(0,0.8)+
scale_fill_manual(name = "Last roll",
values = c("gray48")) +
scale_color_manual(name = "Last rolls",
values = c("gray48")) +
ggthemes::theme_clean() +
theme(plot.title = element_text(hjust = 0.5)) +
ylab("Fraction")+
xlab("Outcome of the last roll")+
ggtitle("Honest")+
rremove("y.axis")+
rremove("ylab") +
rremove("y.text") +
rremove("y.ticks") +
rremove("legend")+
rremove("xlab")
gg_axis <- cowplot::get_plot_component(ggplot() +
labs(x = "Outcome of the last roll"), "xlab-b")
three_rolls<-(dishonest+honest & labs(x = NULL, y = NULL)) / gg_axis + plot_layout(heights = c(40, 1))+ plot_annotation(
title = 'Outcome of the last roll in Three Rolls')
three_rolls
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2", "T3"))%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "treatment_f", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Treatment",y="Dishonesty \U00B1 s.e.")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))+geom_hline(yintercept=0.17,, linetype = "longdash")
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2"))%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "treatment_f", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Treatment",y="Dishonesty \U00B1 s.e.")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))+geom_hline(yintercept=0.17,, linetype = "longdash")
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2"))%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "treatment_f", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Treatment",y="Dishonesty \U00B1 s.e.")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))+geom_hline(yintercept=0.17,, linetype = "longdash")+labels(
caption="Dashed line shows the share of dihonest reports in the Single Roll treatment."
)
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2"))%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "treatment_f", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Treatment",y="Dishonesty \U00B1 s.e.")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))+geom_hline(yintercept=0.17,, linetype = "longdash")+caption("Dashed line shows the share of dihonest reports in the Single Roll treatment.")
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2"))%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "treatment_f", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Treatment",y="Dishonesty \U00B1 s.e.")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))+geom_hline(yintercept=0.17,, linetype = "longdash")
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2"))%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "treatment_f", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Treatment",y="Dishonesty \U00B1 s.e.", caption="The dashed line shows the share of dishonest reports in the Single Roll treatment")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))+geom_hline(yintercept=0.17,, linetype = "longdash")
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2"))%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "treatment_f", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Treatment",y="Dishonesty \U00B1 s.e.", caption="The dashed line shows the share of dishonest reports in the Single Roll treatment (0.17)")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))+geom_hline(yintercept=0.17,, linetype = "longdash")
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2"),
total_rolls>1)%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "treatment_f", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Treatment",y="Dishonesty \U00B1 s.e.", caption="The dashed line shows the share of dishonest reports in the Single Roll treatment (0.17)")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))+geom_hline(yintercept=0.17,, linetype = "longdash")
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2"),
total_rolls>1)%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "treatment_f", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Max. number in the additional rolls compared to the first roll",y="Dishonesty \U00B1 s.e.", caption="The dashed line shows the share of dishonest reports in the Single Roll treatment (0.17)")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))+geom_hline(yintercept=0.17,, linetype = "longdash")
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2"),
keeprolling==1)%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "treatment_f", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Max. number in the additional rolls compared to the first roll",y="Dishonesty \U00B1 s.e.", caption="The dashed line shows the share of dishonest reports in the Single Roll treatment (0.17)")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))+geom_hline(yintercept=0.17, linetype = "longdash")
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2"),
keeprolling==1,
total_rolling<10)%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "treatment_f", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Max. number in the additional rolls compared to the first roll",y="Dishonesty \U00B1 s.e.", caption="The dashed line shows the share of dishonest reports in the Single Roll treatment (0.17)")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))+geom_hline(yintercept=0.17, linetype = "longdash")
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2"),
keeprolling==1)%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "treatment_f", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Max. number in the additional rolls compared to the first roll",y="Dishonesty \U00B1 s.e.", caption="The dashed line shows the share of dishonest reports in the Single Roll treatment (0.17)")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))+geom_hline(yintercept=0.17, linetype = "longdash")
mmcur_pretest_merged%>%
filter(condition%in%c("T1", "T2"),
keeprolling==1,
total_rolling<10)%>%
mutate(seen_greater=if_else(max_of_additional>throw_1,"Greater","Same or Lower"))%>%
ggbarplot(x = "seen_greater", y = "steal",add = "mean_se", fill="gray",label=TRUE, lab.nb.digits = 2, label.pos = "in",facet.by= "treatment_f", data=.)+coord_cartesian(ylim =c (0, 0.4))+labs(x="Max. number in the additional rolls compared to the first roll",y="Dishonesty \U00B1 s.e.", caption="The dashed line shows the share of dishonest reports in the Single Roll treatment (0.17)", subtitle="We filter to those who rolled up to 10 times")+stat_compare_means(comparisons = my_comparisons, label = "p.signif", label.y = c(4))+geom_hline(yintercept=0.17, linetype = "longdash")
time <- read.csv2('/Users/cerenay/mmcurious/trunk/estimering/data/raw/TimeSpent_all.csv') %>%
dcast(participant__code ~ page_name, value.var = "seconds_on_page") %>%
mutate(submitted = ifelse(Results > 0, 1, 0)) %>%
filter(submitted == 1)
mmcur_pretest_merged_pre <- mmcur_pretest %>%
merge(time, by = "participant__code") %>%
na_if(Inf) %>%
na_if(-Inf)
mmcur_pretest_merged <- mmcur_pretest_merged_pre %>%
merge(tenrolls, by.x = "participant__code", by.y = "player") %>%
mutate(time_main_page = main_task_C + main_task_T1 + main_task_T2 + main_task_T3) %>%
filter(distance >= 0, total_rolls <= 60)
sample<-nrow(mmcur_pretest)
mmcur_pretest_merged %>%
select("participant", c(5:50))%>%
download_this(
output_name = "strategic_curiosity_dataset",
output_extension = ".csv",
button_label = "Download data",
button_type = "warning",
has_icon = TRUE,
icon = "fa fa-save"
)
library(foreign)
library(ggplot2)
library(ggpubr)
library(stargazer)
library(compareGroups)
library(boot)
library(expss)
library(reshape2)
library(huxtable)
library(compareGroups)
library(dplyr)
library(data.table)
library(broom)
library(xtable)
library(margins)
library(patchwork)
library(downloadthis)
library(scales)
library(topicmodels)
library(readr)
library(SnowballC)
library(dplyr)
library(tidyr)
mmcur_pretest <- read.csv2('/Users/cerenay/mmcurious/trunk/estimering/data/raw/completeData_merged.csv') %>%
rename_all(~sub("mmcur1player", "", .)) %>%  # remove "mmcur1player" from column names
distinct() %>%  # keep only unique rows
replace(is.na(.), 0) %>%  # replace missing values with 0
mutate(distance = report_roll - throw_1,
steal = if_else(distance > 0, 1, 0),
abvmean = if_else(throw_1 > 3, 1, 0),
getsix = if_else(throw_1 == 6, 1, 0),
throw_1_f = as.factor(throw_1),
low_roll = if_else(max_of_additional < 5, 1, 0),
keeprolling = if_else(total_rolls > 1, 1, 0),
total_rolling = as.numeric(mmcur.1.player.p_total_rolls + total_rolls)) %>%
mutate(steal_f = if_else(steal == 1, 'Dishonest', 'Honest'),
treatment_f = factor(case_when(condition == 'C' ~ 'Single Roll',
condition == 'T1' ~ 'Three Rolls',
condition == 'T2' ~ 'Free Rolls (numbers)',
condition == 'T3' ~ 'Free Rolls (symbols)'),
levels = c('Single Roll', 'Three Rolls', 'Free Rolls (numbers)', 'Free Rolls (symbols)')),
abvmean_c = if_else(abvmean == 1, 'Above 3', '3 or below'),
sex_f = case_when(gender == 'Female' ~ 1,
gender == 'Male' ~ 0,
gender %in% c('I do not want to report my gender', 'Other') ~ 0),
education=if_else(edu %in% c("Less than high school", "High school graduate"), "High school or less", "Higher than highschool"))%>%
filter(!duplicated(participantmturk_worker_id))%>%
filter(distance>=0)
tenrolls<-read.csv2('/Users/cerenay/mmcurious/trunk/estimering/data/raw/tenrolls.csv')
time <- read.csv2('/Users/cerenay/mmcurious/trunk/estimering/data/raw/TimeSpent_all.csv') %>%
dcast(participant__code ~ page_name, value.var = "seconds_on_page") %>%
mutate(submitted = ifelse(Results > 0, 1, 0)) %>%
filter(submitted == 1)
mmcur_pretest_merged_pre <- mmcur_pretest %>%
merge(time, by = "participant__code")
mmcur_pretest_merged <- mmcur_pretest_merged_pre %>%
merge(tenrolls, by.x = "participant__code", by.y = "player") %>%
mutate(time_main_page = main_task_C + main_task_T1 + main_task_T2 + main_task_T3) %>%
filter(distance >= 0, total_rolls <= 60)
sample<-nrow(mmcur_pretest)
mmcur_pretest_merged %>%
select("participant", c(5:50))%>%
download_this(
output_name = "strategic_curiosity_dataset",
output_extension = ".csv",
button_label = "Download data",
button_type = "warning",
has_icon = TRUE,
icon = "fa fa-save"
)
descript<- compareGroups(treatment_f ~ age+sex_f+ education+political+total_rolls+practice_rolls+report_roll+observe+legit+curious, data = mmcur_pretest)
descript <- createTable(descript)
export2md(descript)
reported_number<-ggbarplot(mmcur_pretest, x = "treatment_f", y = "report_roll", add = "mean_se", label=TRUE, lab.nb.digits = 2, label.pos = "in",fill="gray")+
scale_x_discrete(labels = label_wrap(15)) +
labs(x="Treatment",y="Reported Number")
reported_number
download_this(reported_number,
button_type = "warning",
has_icon = TRUE,
icon = "fa fa-save")
intensive_margin<-ggbarplot(mmcur_pretest, x = "treatment_f", y = "distance", add = "mean_se",label=TRUE,  lab.nb.digits = 2, label.pos = "in",fill="gray") +
scale_x_discrete(labels = label_wrap(15)) +
labs(x="Treatment",y="Distance (Size of the Lie) \U00B1 s.e.")
intensive_margin
download_this(intensive_margin,
button_type = "warning",
has_icon = TRUE,
icon = "fa fa-save")
extensive_margin<-ggbarplot(mmcur_pretest, x = "treatment_f", y = "steal", add = "mean_se",label=TRUE, lab.nb.digits = 2,fill="gray") +
scale_x_discrete(labels = label_wrap(15)) +
labs(x="Treatment",y="Proportion of Dishonest Reports \U00B1 s.e.")
my_comparisons <- list( c("Single Roll","Three Rolls"), c("Single Roll","Free Rolls (numbers)"), c("Free Rolls (numbers)","Free Rolls (symbols)"),c("Three Rolls","Free Rolls (numbers)"))
extensive_margin
download_this(extensive_margin,
button_type = "warning",
has_icon = TRUE,
icon = "fa fa-save")
report_real<-ggplot(mmcur_pretest,aes( x= report_roll,y= (..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]))+
geom_histogram(binwidth=0.5, alpha=0.2, colour="black", fill="blue")+facet_grid(.~treatment_f)+xlab("Reported vs. Real Number")+
geom_histogram(aes( x= throw_1,y= (..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]),binwidth=0.5, alpha=0.3)+
ggtitle("Reported number vs. the real outcome of the first die-roll")+
labs(subtitle="The blue bars show the reported number and the gray bars show the real die-outcome")+
ylab("Fraction")+
guides(fill = TRUE) +
theme(
panel.background = element_rect(fill = "transparent",colour = NA), # or theme_blank()
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "transparent",colour = NA)
)
report_real
download_this(report_real,
button_type = "warning",
has_icon = TRUE,
icon = "fa fa-save")
library(stringr)
library(tidyr)
mmcur_pretest[,13:22][mmcur_pretest[,13:22] == 0] <- NA
mmcur_pretest[,13:22][is.na(mmcur_pretest[,13:22])] <- ""
dishonest<-mmcur_pretest%>%
tidyr::unite(throws, throw_1:tenth_roll, sep=",",remove = FALSE)%>%
mutate(throws_2=gsub("^,*|(?<=,),|,*$", "", throws, perl=T))%>%
mutate(last_outcome=as.numeric(stringr::str_sub(throws_2, start= -1)))%>%
mutate(reported_number=as.numeric(report_roll))%>%
select(steal,reported_number,throw_1, last_outcome,treatment_f,total_rolls )%>%
filter(steal==1&treatment_f=="Free Rolls (numbers)"&total_rolls>1)%>%
ggplot() +
geom_histogram(aes(x= last_outcome, y= (..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..],color = "black", fill = "gray48"), stat="count",binwidth=0.5, alpha=0.3,size=1, na.rm = TRUE) +
scale_fill_manual(name = "Last roll",
values = c("gray48")) +
scale_color_manual(name = "Last rolls",
values = c("gray48")) +
ylim(0,0.5)+
geom_hline(yintercept = 0.16,linetype = "longdash")+
ggthemes::theme_clean() +
theme(plot.title = element_text(hjust = 0.5), legend.position = c(0.5,0.8)) +
#geom_density(aes(x= "reported_number", y = ..density..), fill = "black", colour = "black", alpha = 0.3) +
ylab("Frequency")+
xlab("Outcome of the last die-roll")+
ggtitle("Dishonest")+
rremove("legend")+
rremove("xlab")
honest<-mmcur_pretest%>%
unite(throws, throw_1:tenth_roll, sep=",",remove = FALSE)%>%
mutate(throws_2=gsub("^,*|(?<=,),|,*$", "", throws, perl=T))%>%
mutate(last_outcome=as.numeric(str_sub(throws_2, start= -1)))%>%
mutate(reported_number=as.numeric(report_roll))%>%
select(steal,reported_number,throw_1, last_outcome,treatment_f,total_rolls )%>%
filter(steal==0&treatment_f=="Free Rolls (numbers)"&total_rolls>1)%>%
ggplot() +
geom_histogram(aes(x= last_outcome, y= (..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..],color = "black", fill = "gray48"), stat="count",binwidth=0.5, alpha=0.3,size=1, na.rm = TRUE) +
scale_fill_manual(name = "Last roll",
values = c("gray48")) +
scale_color_manual(name = "Last rolls",
values = c("gray48")) +
ylim(0,0.5)+
geom_hline(yintercept = 0.16,linetype = "longdash")+
ggthemes::theme_clean()+
theme(plot.title = element_text(hjust = 0.5), legend.position = c(0.5,0.8)) +
ylab("Fraction")+
xlab("Outcome of the last roll")+
ggtitle("Honest")+
rremove("y.axis")+
rremove("ylab") +
rremove("y.text") +
rremove("y.ticks") +
rremove("legend")+
rremove("xlab")
gg_axis <- cowplot::get_plot_component(ggplot() +
labs(x = "Outcome of the last roll"), "xlab-b")
free_rolls<- (dishonest+honest & labs(x = NULL, y = NULL)) / gg_axis + plot_layout(heights = c(40, 1))+ plot_annotation(
title = 'Outcome of the last roll in Free Rolls (numbers)')
free_rolls
library(foreign)
library(ggplot2)
library(ggpubr)
library(stargazer)
library(compareGroups)
library(boot)
library(expss)
library(reshape2)
library(huxtable)
library(compareGroups)
library(dplyr)
library(data.table)
library(broom)
library(xtable)
library(margins)
library(patchwork)
library(downloadthis)
library(scales)
library(topicmodels)
library(readr)
library(SnowballC)
honest
dishonest<-mmcur_pretest%>%
tidyr::unite(throws, throw_1:tenth_roll, sep=",",remove = FALSE)%>%
mutate(throws_2=gsub("^,*|(?<=,),|,*$", "", throws, perl=T))%>%
mutate(last_outcome=as.numeric(stringr::str_sub(throws_2, start= -1)))%>%
mutate(reported_number=as.numeric(report_roll))%>%
select(steal,reported_number,throw_1, last_outcome,treatment_f,total_rolls )%>%
filter(steal==1&treatment_f=="Free Rolls (numbers)"&total_rolls>1)%>%
ggplot() +
geom_histogram(aes(x= last_outcome, y= (..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..],color = "black", fill = "gray48"), stat="count",binwidth=0.5, alpha=0.3,size=1, na.rm = TRUE) +
scale_fill_manual(name = "Last roll",
values = c("gray48")) +
scale_color_manual(name = "Last rolls",
values = c("gray48")) +
ylim(0,0.5)+
geom_hline(yintercept = 0.16,linetype = "longdash")+
ggthemes::theme_clean() +
theme(plot.title = element_text(hjust = 0.5), legend.position = c(0.5,0.8)) +
#geom_density(aes(x= "reported_number", y = ..density..), fill = "black", colour = "black", alpha = 0.3) +
ylab("Frequency")+
xlab("Outcome of the last die-roll")+
ggtitle("Dishonest")+
rremove("legend")+
rremove("xlab")
dishonest
ggplot2library(stringr)
stargazer::stargazer(bootresults,type="html")
install.packages('knitrBootstrap')
